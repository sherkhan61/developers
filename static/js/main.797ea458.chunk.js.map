{"version":3,"sources":["api/socialApi.ts","features/users/modules/users/actions.ts","ui/organisms/Paginator/Paginator.module.scss","ui/organisms/Navbar/Navbar.tsx","ui/organisms/Footer/Footer.tsx","ui/organisms/Header/Header.tsx","features/authentication/ui/atoms/Logout/Logout.tsx","features/authentication/ui/organisms/UserAutnInfoBar/UserAuthInfoBar.tsx","features/authentication/ui/atoms/SIgnIn.tsx","features/authentication/ui/molecules/Dropdown/Dropdown.tsx","features/authentication/UserAuthInfo.tsx","ui/templates/Common.tsx","features/users/modules/users/selectors.ts","features/users/ui/atoms/FollowBtn/FollowBtn.tsx","features/users/ui/organisms/User/User.tsx","ui/organisms/Paginator/Paginator.tsx","features/users/Users.tsx","features/users/ui/moleculs/FriendsBar/FriendsBar.tsx","features/users/Friends.tsx","features/users/ui/moleculs/UsersSearch/UsersSearch.tsx","features/users/Search.tsx","ui/organisms/Navbar/Navbar.module.scss","ui/atoms/preloader/Preloader.tsx","ui/atoms/preloader/Preloader.module.scss","features/users/ui/organisms/User/User.module.scss","features/users/ui/moleculs/FriendsBar/FriendsBar.module.scss","features/authentication/modules/authorization/actions.ts","features/authentication/ui/organisms/UserAutnInfoBar/UserAuthInfoBar.module.scss","ui/organisms/Header/Header.module.scss","features/authentication/ui/organisms/LoginForm/LoginForm.module.scss","ui/assets/images/avatar-undefined.jpg","features/authentication/ui/molecules/Dropdown/Dropdown.module.scss","ui/templates/Common.module.scss","features/users/Users.module.scss","features/users/ui/atoms/FollowBtn/Followbtn.module.scss","ui/organisms/Footer/Footer.module.scss","features/users/ui/moleculs/UsersSearch/UsersSearch.module.scss","ui/assets/images/logo.svg","features/authentication/ui/atoms/Logout/Logout.module.scss","features/authentication/ui/atoms/SignIn.module.scss","features/chat/modules/actions.ts","features/chat/Message.tsx","features/chat/Messages.tsx","features/chat/AddMessagesForm.tsx","features/chat/Chat.tsx","pages/chat/index.tsx","pages/users/index.tsx","pages/friends/index.tsx","pages/search/index.tsx","features/authentication/ui/organisms/LoginForm/LoginForm.tsx","features/authentication/Login.tsx","pages/login/index.tsx","Routes.tsx","features/authentication/modules/initialization/actions.ts","App.tsx","features/profile/modules/profile/reducer.ts","utils/obj-helpers.ts","features/users/modules/users/reducer.ts","features/chat/modules/reducer.ts","features/authentication/modules/authorization/reducer.ts","features/authentication/modules/initialization/reducer.ts","features/news/modules/news/reducer.ts","features/music/modules/music/reducer.ts","lib/store/root-reducer.ts","lib/store/store.ts","index.tsx"],"names":["instance","axios","create","withCredentials","baseURL","headers","authAPI","me","get","then","response","data","resultCode","login","email","password","rememberMe","captcha","post","res","logout","delete","profileAPI","getProfile","userId","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","securityAPI","getCaptchaUrl","usersAPI","getUsers","pageSize","currentPage","isFriend","term","follow","unfollow","isFollowed","subcribers","ws","closeHandler","notifySubscribersAboutStatus","setTimeout","createChannel","messageHandler","e","newMessages","JSON","parse","forEach","s","openHandler","errorHandler","console","error","cleanUp","removeEventListener","close","WebSocket","addEventListener","chatAPI","start","stop","subscribe","eventName","callback","push","filter","unsubscribe","sendMessage","message","send","usersActions","followSuccess","type","unfollowSuccess","setUsers","users","setFriends","friends","setCurrentPage","setTotalUsersCount","totalUsersCount","count","toggleIsFetching","isFetching","toggleIsFollowingProgress","dispatch","a","items","totalCount","followUnfollowFlow","apiMethod","actionCreator","followThunk","bind","unfollowThunk","search","getState","usersPage","friendsPortion","usersPortion","allUsers","length","getFriendsDemo","module","exports","Navbar","children","clearPage","clearMusicSearch","isMobile","document","documentElement","clientWidth","className","styles","container","to","activeClassName","active","onClick","dialogs_link","Footer","classes","footer","footer_content","Header","header","header_content","logo_wrapper","header_logo","alt","src","logo","Logout","useDispatch","aria-hidden","UserAuthInfoBar","React","forwardRef","ref","onDropdown","useSelector","state","userName","auth","user","fullName","userPhoto","photos","small","shallowEqual","userInfo","userInfo_name","userInfo_photo","SignIn","sign_in","login_link","Dropdown","isVisible","match","useRouteMatch","dropdown","UserAuthInfo","useState","isDropped","setDropdown","isAuth","userInfoRef","useRef","dropRef","onCloseDropDown","useCallback","target","closest","dropClass","current","style","background","opacity","visibility","CommonTemplate","app_wrapper","content_wrapper","app_content","getUsersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","followingInProgress","FollowBtn","followed","isFollowing","id","followBtn","disabled","some","item","onUnFollow","onFollow","User","photo","trim","substr","key","user_info","user_photo","ava_undefined","user_info_status","btn_container","sendMsg_btn","Paginator","portionSize","onPageChanged","pagesCount","Math","ceil","pages","i","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","currentPages","p","map","pageNumber","selectedPage","onPortionNumber","k","paginator_wrapper","paginator","icon","left","arrow","Users","path","useLocation","pathname","isFriends","searchTerm","useParams","usersList","useEffect","startsWith","name","Preloader","arr","isEmpty","users_notFound","FriendsBar","friendsElements","friend","friendPhoto","avatar_undefined","friendName","friendsBar","friendInfo","Friends","UsersSearch","onSearch","onChange","usersSearch","autoComplete","onKeyDown","placeholder","value","Search","history","useHistory","setSearchTerm","cssload_loader","cssload_inner","cssload_one","cssload_two","cssload_three","actions","captchaUrl","getAuth","authUserProfile","messages","url","undefined","chatActions","payload","_newMessageHandler","newMessageHandlerCreator","_statusChangedHandler","statusChangedHandlerCreator","Message","memo","log","width","Messages","chat","messagesAnchorRef","isAutoScroll","setIsAutoScroll","scrollIntoView","behavior","height","overflowY","onScroll","element","currentTarget","abs","scrollHeight","scrollTop","clientHeight","m","index","AddMessagesForm","setMessage","Chat","ChatPage","Common","UsersPage","FriendsPage","SearchPage","LoginForm","useForm","register","errors","handleSubmit","onSubmit","required","span_error","htmlFor","Login","LoginPage","ProfilePage","lazy","default","NewsPage","MusicPage","Routes","fallback","exact","from","render","initActions","connector","connect","initialized","init","initializeApp","this","props","Component","initialState","profileReducer","action","updateObjectInArray","itemId","newItemObjProps","usersReducer","chatReducer","v1","array","aboutMe","contacts","lookingForAJob","lookingForAJobDescription","articles","charts","searchResults","rootReducer","combineReducers","profilePage","news","music","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.797ea458.chunk.js","sourcesContent":["import axios, {AxiosResponse} from 'axios'\r\n\r\n\r\nexport type APIResponseType<T = {}> = {\r\n    resultCode: number,\r\n    messages: Array<any> | string,\r\n    data: T\r\n}\r\n\r\n\r\nexport type LoginInfoType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha?: string\r\n    logError?: string\r\n};\r\n\r\nexport type ProfileType = {\r\n    userId?: null | number\r\n    lookingForAJob?: null | boolean\r\n    lookingForAJobDescription?: null | string\r\n    fullName?: null | string\r\n    contacts?: null | ContactsType\r\n    photos?: null | PhotosType\r\n    aboutMe?: null | string\r\n}\r\nexport type ContactsType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\nexport type PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\nexport type UserType = {\r\n    id: number\r\n    name: string\r\n    status: null | string\r\n    photos: PhotosType\r\n    followed: boolean\r\n}\r\n\r\n\r\nexport type GetsItemsType = {\r\n    items: Array<UserType>\r\n    totalCount?: number\r\n    error?: string | null\r\n}\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '11f6f6da-a19a-4694-bc7f-68eb9e84e954'\r\n    }\r\n})\r\n\r\n\r\ntype MeResponseDataType = {\r\n    id: number, email: string, login: string\r\n}\r\ntype LoginResponseDataType = {\r\n    userId: number\r\n}\r\nexport const authAPI = {\r\n    me(): Promise<MeResponseDataType> {\r\n        return instance\r\n            .get(`/auth/me`)\r\n            .then((response) => {\r\n                if (response.data.resultCode === 0) return response.data.data\r\n            })\r\n    },\r\n    login(email: string, password: string, rememberMe = false, captcha: null | string = null) {\r\n        return instance.post<APIResponseType<LoginResponseDataType>>(`auth/login`, {\r\n            email,\r\n            password,\r\n            rememberMe,\r\n            captcha\r\n        })\r\n            .then(res => res.data)\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/` + userId).then(res => res.data)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>('profile/status/' + userId).then(res => res.data)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<APIResponseType>('profile/status', {status: status}).then(res => res.data)\r\n    },\r\n    savePhoto(photoFile: File): Promise<APIResponseType<{ photos: PhotosType }> | never> {\r\n        const formData = new FormData()\r\n        formData.append('newPhoto', photoFile)\r\n        return instance.put('/profile/photo', formData)\r\n            .then((response) => {\r\n                if (response.data.resultCode === 0) {\r\n                    return response.data\r\n                }\r\n            })\r\n    },\r\n    saveProfile(profile: ProfileType): Promise<AxiosResponse<APIResponseType>> {\r\n        return instance.put('/profile/', profile).then((response) => {\r\n            return response\r\n        })\r\n    }\r\n}\r\n\r\n\r\ntype GetCaptchaUrlResponseType = {\r\n    url: string\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get<GetCaptchaUrlResponseType>(`security/get-captcha-url`).then(res => res.data)\r\n    }\r\n}\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(pageSize: number, currentPage: number,\r\n             isFriend: boolean, term: string = ''): Promise<GetsItemsType> {\r\n        return instance.get(`users?count=${pageSize}&page=${currentPage}&friend=${isFriend}&term=${term}`)\r\n            .then((response) => response.data)\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post<APIResponseType>(`follow/${userId}`).then(res => res.data)\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`).then(res => res.data) as Promise<APIResponseType>\r\n    },\r\n    isFollowed(userId: number) {\r\n        return instance.get(`follow/${userId}`).then(res => res.data) as Promise<boolean>\r\n    }\r\n}\r\n\r\n\r\n// chatApi\r\n\r\nconst subcribers = {\r\n    'messages-received': [] as MessagesReceivedSubscriberType[],\r\n    'status-changed': [] as StatusChangedSubscriberType[]\r\n}\r\n\r\nlet ws: WebSocket | null = null\r\ntype EventsNamesType = 'messages-received' | 'status-changed'\r\n\r\nconst closeHandler = () => {\r\n    notifySubscribersAboutStatus('pending')\r\n    setTimeout(createChannel, 3000)\r\n}\r\nconst messageHandler = (e: MessageEvent) => {\r\n    const newMessages = JSON.parse(e.data)\r\n    subcribers['messages-received'].forEach(s => s(newMessages))\r\n}\r\nconst openHandler = () => {\r\n    notifySubscribersAboutStatus('ready')\r\n}\r\nconst errorHandler = () => {\r\n    notifySubscribersAboutStatus('error')\r\n    console.error('REFRESH PAGE')\r\n}\r\nconst cleanUp = () => {\r\n    ws?.removeEventListener('close', closeHandler)\r\n    ws?.removeEventListener('message', messageHandler)\r\n    ws?.removeEventListener('open', openHandler)\r\n    ws?.removeEventListener('error', errorHandler)\r\n}\r\nconst notifySubscribersAboutStatus = (status: StatusType) => {\r\n    subcribers['status-changed'].forEach(s => s(status))\r\n}\r\n\r\nfunction createChannel() {\r\n    cleanUp()\r\n    ws?.close()\r\n    ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n    notifySubscribersAboutStatus('pending')\r\n    ws.addEventListener('close', closeHandler)\r\n    ws.addEventListener('message', messageHandler)\r\n    ws.addEventListener('open', openHandler)\r\n    ws.addEventListener('error', errorHandler)\r\n}\r\n\r\n\r\nexport const chatAPI = {\r\n    start() {\r\n        createChannel()\r\n    },\r\n    stop() {\r\n        subcribers['messages-received'] = []\r\n        subcribers['status-changed'] = []\r\n        cleanUp()\r\n        ws?.close()\r\n    },\r\n    subscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subcribers[eventName].push(callback)\r\n        return () => {\r\n            // @ts-ignore\r\n            subcribers[eventName] = subcribers[eventName].filter(s => s !== callback)\r\n        }\r\n    },\r\n    unsubscribe(eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subcribers[eventName] = subcribers[eventName].filter(s => s !== callback)\r\n    },\r\n    sendMessage(message: string) {\r\n        ws?.send(message)\r\n    }\r\n}\r\n\r\ntype MessagesReceivedSubscriberType = (messages: ChatMessageAPIType[]) => void\r\ntype StatusChangedSubscriberType = (status: StatusType) => void\r\n\r\nexport type ChatMessageAPIType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\nexport type StatusType = 'pending' | 'ready' | 'error'\r\n\r\n\r\n\r\n","import {Dispatch} from 'redux'\r\nimport {APIResponseType, usersAPI, UserType} from '../../../../api/socialApi'\r\nimport {ActionsTypes, ThunkType} from './reducer'\r\n\r\n\r\n// ==========Action Creators======================\r\n\r\nexport const usersActions = {\r\n    followSuccess: (userId: number) => ({type: 'SN/USERS/FOLLOW', userId} as const),\r\n    unfollowSuccess: (userId: number) => ({type: 'SN/USERS/UNFOLLOW', userId} as const),\r\n    setUsers: (users: Array<UserType>) => ({type: 'SN/USERS/SET_USERS', users} as const),\r\n    setFriends: (friends: Array<UserType>) => ({type: 'SN/USERS/SET_FRIENDS', friends} as const),\r\n    setCurrentPage: (currentPage: number) => ({\r\n        type: 'SN/USERS/SET_CURRENT_PAGE',\r\n        currentPage\r\n    } as const),\r\n    setTotalUsersCount: (totalUsersCount: number) => ({\r\n        type: 'SN/USERS/SET_TOTAL_USERS_COUNT',\r\n        count: totalUsersCount\r\n    } as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({\r\n        type: 'SN/USERS/TOGGLE_IS_FETCHING',\r\n        isFetching\r\n    } as const),\r\n    toggleIsFollowingProgress: (isFetching: boolean, userId: number) => ({\r\n        type: 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS',\r\n        isFetching,\r\n        userId\r\n    } as const),\r\n}\r\n\r\n\r\n// =====================Thunk Creators====================\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number, isFriend: boolean = false, term?: string): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(usersActions.toggleIsFetching(true))\r\n        dispatch(usersActions.setCurrentPage(currentPage))\r\n\r\n        let data = await usersAPI.getUsers(currentPage, pageSize, isFriend, term)\r\n        dispatch(usersActions.toggleIsFetching(false))\r\n        dispatch(usersActions.setUsers(data.items))\r\n        dispatch(usersActions.setTotalUsersCount(data.totalCount!))\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: Dispatch<ActionsTypes>,\r\n                                  userId: number,\r\n                                  apiMethod: (userId: number) => Promise<APIResponseType>,\r\n                                  actionCreator: (userId: number) => ActionsTypes) => {\r\n    dispatch(usersActions.toggleIsFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(usersActions.toggleIsFollowingProgress(false, userId))\r\n}\r\n\r\nexport const followThunk = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), usersActions.followSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollowThunk = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), usersActions.unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport const search = (term: string): ThunkType => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(usersActions.toggleIsFetching(true));\r\n        const friendsPortion = await usersAPI.getUsers(getState().usersPage.pageSize,\r\n            getState().usersPage.currentPage / 2,\r\n            true,\r\n            term);\r\n        const usersPortion = await usersAPI.getUsers(getState().usersPage.pageSize,\r\n            getState().usersPage.currentPage / 2,\r\n            false,\r\n            term);\r\n        const allUsers = [...friendsPortion.items, ...usersPortion.items];\r\n        dispatch(usersActions.setUsers(allUsers));\r\n        dispatch(usersActions.setTotalUsersCount(allUsers.length));\r\n        dispatch(usersActions.toggleIsFetching(false));\r\n    };\r\n}\r\n\r\nexport const getFriendsDemo = (pageSize: number,\r\n                               currentPage: number,\r\n                               isFriend: boolean = true): ThunkType => {\r\n    return async (dispatch) => {\r\n        let data = await usersAPI.getUsers(pageSize, currentPage, isFriend)\r\n            dispatch(usersActions.setFriends(data.items));\r\n    }\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator_wrapper\":\"Paginator_paginator_wrapper__3n-gQ\",\"paginator\":\"Paginator_paginator__1kcEK\",\"pageNumber\":\"Paginator_pageNumber__2tS1b\",\"selectedPage\":\"Paginator_selectedPage__2BPuB\",\"icon\":\"Paginator_icon__FWlwL\",\"arrow\":\"Paginator_arrow__1rxH3\",\"left\":\"Paginator_left__3UDzl\"};","import React, {FC} from 'react'\r\nimport styles from './Navbar.module.scss'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {ICommonTemplateProps} from '../../templates/Common'\r\n\r\n\r\ninterface PropsType extends ICommonTemplateProps {\r\n    clearPage: () => void\r\n}\r\n\r\nexport const Navbar: FC<PropsType> = ({children, clearPage, clearMusicSearch}) => {\r\n\r\n    const isMobile: boolean = document.documentElement.clientWidth <= 860\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <nav>\r\n                <ul className={styles['mcd-menu']}>\r\n\r\n                    <li>\r\n                        <NavLink to=\"/profile\" activeClassName={styles.active}>\r\n                            <i className=\"fa fa-home\"/>\r\n                            <strong>Profile</strong>\r\n                            <small>your story</small>\r\n                        </NavLink>\r\n                    </li>\r\n                    <li onClick={clearPage}>\r\n                        <NavLink to={isMobile ?\r\n                            '/friends' :\r\n                            '/users'} activeClassName={styles.active}>\r\n                            <i className=\"fa fa-users\"/>\r\n                            <strong>Users</strong>\r\n                            <small>our developers</small>\r\n                        </NavLink>\r\n                    </li>\r\n\r\n                    <li className={styles.dialogs_link}>\r\n                        <NavLink to=\"/chat\" activeClassName={styles.active}>\r\n                            <i className=\"fa fa-comments-o\"/>\r\n                            <strong>Chat</strong>\r\n                            <small>your chat</small>\r\n                        </NavLink>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <NavLink to=\"/news\" activeClassName={styles.active}>\r\n                            <i className=\"fa fa-globe\"/>\r\n                            <strong>News</strong>\r\n                            <small>breaking news</small>\r\n                        </NavLink>\r\n                    </li>\r\n\r\n\r\n                    <li>\r\n                        <NavLink to=\"/music\" activeClassName={styles.active}\r\n                                 onClick={clearMusicSearch}>\r\n                            <i className=\"fa fa-music\"/>\r\n                            <strong>Music</strong>\r\n                            <small>deezer chart</small>\r\n                        </NavLink>\r\n                    </li>\r\n\r\n\r\n                </ul>\r\n            </nav>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import classes from \"./Footer.module.scss\"\r\nimport React, {FC} from \"react\";\r\n\r\n\r\nexport const Footer: FC = () => {\r\n  return (\r\n      <footer className={classes.footer}>\r\n        <p className={classes.footer_content}>Sherkhan Tulkibay © 2021.\r\n          All\r\n          rights are not reserved\r\n        </p>\r\n      </footer>\r\n  )\r\n};","import React, {FC, ReactNode} from 'react';\r\nimport classes from './Header.module.scss'\r\nimport logo from \"../../../ui/assets/images/logo.svg\"\r\n\r\ninterface IHeaderProps {\r\n  children: Array<ReactNode>\r\n}\r\n\r\nexport const Header: FC<IHeaderProps> = ({children}) => {\r\n\r\n  return (\r\n      <header className={classes.header}>\r\n        <div className={classes.header_content}>\r\n          <div className={classes.logo_wrapper}>\r\n            <img className={classes.header_logo} alt=\"logo\"\r\n                src={logo}/>\r\n            {children[0]}\r\n          </div>\r\n          {children[1]}\r\n        </div>\r\n      </header>\r\n\r\n  );\r\n};","import React, {FC} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport styles from \"./Logout.module.scss\"\r\nimport {logout} from '@auth/modules/authorization/actions'\r\n\r\ninterface ILogoutProps {\r\n  isMobile: boolean\r\n}\r\n\r\nexport const Logout: FC<ILogoutProps> = ({isMobile}) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const onLogout = () => dispatch(logout());\r\n\r\n  return <li className={(isMobile ? \"\" : styles.logout)}\r\n      onClick={onLogout}>\r\n    <i className=\"fa fa-sign-out\" aria-hidden=\"true\"/>Logout</li>\r\n};","import classes from \"./UserAuthInfoBar.module.scss\";\r\nimport React, {ReactNode} from \"react\";\r\nimport {shallowEqual, useSelector} from \"react-redux\";\r\nimport {RootState} from '@store/root-reducer'\r\nimport {Logout} from '@auth/ui/atoms/Logout/Logout'\r\n\r\ninterface IUserAuthInfoBarProps {\r\n  onDropdown: () => void\r\n  children: ReactNode\r\n}\r\n\r\nexport const UserAuthInfoBar = React.forwardRef<HTMLDivElement, IUserAuthInfoBarProps>\r\n(({onDropdown, children}, ref) => {\r\n\r\n  const {userName, userPhoto} = useSelector((state: RootState) => (\r\n      {\r\n        userName: state.auth.user.fullName,\r\n        userPhoto: state.auth.user.photos?.small\r\n      }\r\n  ), shallowEqual);\r\n\r\n  const isMobile: boolean = document.documentElement.clientWidth <= 480;\r\n\r\n  return <>\r\n    {!isMobile ?\r\n        <div ref={ref} className={classes.userInfo}\r\n            onClick={onDropdown}>\r\n        <span\r\n            className={classes.userInfo_name}>{userName}</span>\r\n          <div className={classes.userInfo_photo}>\r\n            <img alt=\"user_photo\"\r\n                src={userPhoto as string}/>\r\n          </div>\r\n          {children}\r\n        </div> :\r\n        <Logout isMobile={isMobile}/>}\r\n  </>\r\n});","import React, {FC} from \"react\";\r\nimport styles from \"./SignIn.module.scss\"\r\nimport classes\r\n  from \"@auth/ui/organisms/UserAutnInfoBar/UserAuthInfoBar.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nexport const SignIn:FC = () => {\r\n  return (\r\n    <div className={styles.sign_in}>\r\n\r\n      <NavLink className={classes.login_link}\r\n        to={\"/login\"}>Login</NavLink>\r\n      <i className=\"fa fa-sign-in\"\r\n        aria-hidden=\"true\"/>\r\n    </div>\r\n  )\r\n};","import classes from \"./Dropdown.module.scss\";\r\nimport React from \"react\";\r\nimport {Link, useRouteMatch} from \"react-router-dom\";\r\nimport {Logout} from '@auth/ui/atoms/Logout/Logout'\r\n\r\ninterface IDropdownProps {\r\n  isVisible: boolean\r\n}\r\n\r\nexport const Dropdown = React.forwardRef<HTMLUListElement, IDropdownProps>(({isVisible}, ref) => {\r\n\r\n  const isMobile: boolean = document.documentElement.clientWidth <= 860;\r\n  const match = useRouteMatch(\"/profile\");\r\n\r\n  return (\r\n      <ul ref={ref} className={classes.dropdown}>\r\n        {match ? null :\r\n            <li>\r\n              <Link to={\"/profile\"}>\r\n                My profile\r\n              </Link>\r\n            </li>}\r\n        <Logout isMobile={isMobile}/>\r\n      </ul>\r\n  )\r\n});","import React, {FC, useCallback, useRef, useState} from 'react'\r\nimport dropClass from './ui/molecules/Dropdown/Dropdown.module.scss'\r\nimport {useSelector} from 'react-redux'\r\nimport {RootState} from '@store/root-reducer'\r\nimport {UserAuthInfoBar} from './ui/organisms/UserAutnInfoBar/UserAuthInfoBar'\r\nimport {SignIn} from './ui/atoms/SIgnIn'\r\nimport {Dropdown} from './ui/molecules/Dropdown/Dropdown'\r\n\r\n\r\nexport const UserAuthInfo: FC = () => {\r\n\r\n\r\n    const [isDropped, setDropdown] = useState<boolean>(false)\r\n\r\n    const isAuth = useSelector((state: RootState) => state.auth.isAuth)\r\n    const userInfoRef = useRef<HTMLDivElement>(null)\r\n    const dropRef = useRef<HTMLUListElement>(null)\r\n\r\n    const onDropdown = () => {\r\n        userInfoRef.current!.style.background = '#1e1e1e'\r\n        dropRef.current!.style.visibility = 'visible'\r\n        dropRef.current!.style.opacity = '0.9'\r\n        document.addEventListener('click', onCloseDropDown)\r\n    }\r\n\r\n\r\n    const onCloseDropDown: EventListener = useCallback((e: Event): void => {\r\n        let target = e.target as HTMLDivElement\r\n        if (!target.closest('.' + dropClass.dropdown)) {\r\n            setDropdown(false)\r\n            userInfoRef.current!.style.background = ''\r\n            dropRef.current!.style.opacity = '0'\r\n            dropRef.current!.style.visibility = 'hidden'\r\n            document.removeEventListener('click', onCloseDropDown)\r\n        } else {\r\n            document.removeEventListener('click', onCloseDropDown)\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (<>\r\n        {isAuth ?\r\n            <UserAuthInfoBar ref={userInfoRef} onDropdown={onDropdown}>\r\n                <Dropdown isVisible={isDropped} ref={dropRef}/>\r\n            </UserAuthInfoBar> :\r\n            <SignIn/>}\r\n    </>)\r\n}","import React, {FC} from 'react'\r\nimport classes from './Common.module.scss'\r\nimport {useDispatch} from 'react-redux'\r\nimport {usersActions} from '@users/modules/users/actions'\r\nimport {Friends, Search} from '@users'\r\nimport {Navbar} from '@ui/organisms/Navbar/Navbar'\r\nimport {Footer} from '@ui/organisms/Footer/Footer'\r\nimport {Header} from '@ui/organisms/Header/Header'\r\nimport {UserAuthInfo} from '@auth/UserAuthInfo'\r\n\r\n\r\nexport type ICommonTemplateProps = {\r\n    clearMusicSearch?: () => void\r\n}\r\n\r\nexport const CommonTemplate: FC<ICommonTemplateProps> = ({children, clearMusicSearch}) => {\r\n    const dispatch = useDispatch()\r\n    const clearPage = (): void => {\r\n        dispatch(usersActions.setCurrentPage(1))\r\n    }\r\n    return (\r\n        <>\r\n            <Header>\r\n                <Search/>\r\n                <UserAuthInfo/>\r\n            </Header>\r\n            <div className={classes.app_wrapper}>\r\n                <div className={classes.content_wrapper}>\r\n                    <Navbar clearPage={clearPage}\r\n                            clearMusicSearch={clearMusicSearch}>\r\n                        <Friends clearPage={clearPage}/>\r\n                    </Navbar>\r\n                    <main className={classes.app_content}>\r\n                        {children}\r\n                    </main>\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n        </>\r\n    )\r\n}","import {RootState} from '../../../../lib/store/root-reducer'\r\n\r\n\r\nexport const getUsersPage = (state: RootState) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize = (state: RootState) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: RootState) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: RootState) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: RootState) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: RootState) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n","import React, {FC} from 'react'\r\nimport classes from './Followbtn.module.scss'\r\nimport {useDispatch} from 'react-redux'\r\nimport {followThunk, unfollowThunk} from '@users/modules/users/actions'\r\n\r\ninterface IFollowBtnProps {\r\n  followed: boolean\r\n  isFollowing: Array<number>\r\n  id: number\r\n}\r\n\r\nexport const FollowBtn: FC<IFollowBtnProps> = ({followed, isFollowing, id}) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onFollow = (id: number) => {\r\n    dispatch(followThunk(id));\r\n  };\r\n\r\n  const onUnFollow = (id: number) => {\r\n    dispatch(unfollowThunk(id));\r\n  };\r\n  return (\r\n      followed ? (\r\n          <button className={classes.followBtn}\r\n              disabled={isFollowing.some((item) => item === id)}\r\n              onClick={() => {\r\n                onUnFollow(id);\r\n              }}>\r\n            Unfollow\r\n          </button>\r\n      ) : (\r\n          <button className={classes.followBtn}\r\n              disabled={isFollowing.some((item) => item === id)}\r\n              onClick={() => {\r\n                onFollow(id);\r\n              }}>\r\n            Follow\r\n          </button>\r\n      )\r\n  )\r\n};","import React, {FC} from \"react\";\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport classes from \"./User.module.scss\"\r\nimport ava_undefined from \"@ui/assets/images/avatar-undefined.jpg\"\r\nimport {FollowBtn} from '@users/ui/atoms/FollowBtn/FollowBtn'\r\n\r\ninterface IUserProps {\r\n  isAuth: boolean\r\n  photo: string | null\r\n  status: string | null\r\n  id: number\r\n  followed: boolean\r\n  fullName: string\r\n  isFollowing: Array<number>\r\n}\r\n\r\nexport const User:FC<IUserProps> = ({\r\nstatus, isAuth, id, photo, fullName, followed, isFollowing }) => {\r\n\r\n  if (status && status.length > 30) {\r\n    status = status.trim().substr(0, 30) + \". . .\";\r\n  }\r\n  return (\r\n      <div className={classes.user} key={id}>\r\n\r\n        <div className={classes.user_info}>\r\n          <div className={classes.user_photo}>\r\n            <NavLink to={`/profile/${id}`}>\r\n              <img src={photo || ava_undefined}\r\n                  alt=\"avatar\"/>\r\n            </NavLink>\r\n          </div>\r\n\r\n          <div><p>{fullName}</p>\r\n            <p className={classes.user_info_status}>{status}</p></div>\r\n        </div>\r\n        <div className={classes.btn_container}>\r\n          {isAuth ?\r\n              <>\r\n                <FollowBtn followed={followed}\r\n                    isFollowing={isFollowing}\r\n                    id={id}\r\n                /><Link to={`/dialogs/${id}`}>\r\n                <button className={classes.sendMsg_btn}>Send Message\r\n                </button>\r\n              </Link> </> :\r\n              \"\"}\r\n        </div>\r\n      </div>\r\n  );\r\n\r\n};\r\n\r\n\r\n","import React, {FC, ReactNode, useState} from \"react\";\r\nimport classes from \"./Paginator.module.scss\"\r\n\r\ntype PropsType = {\r\n  portionSize?: number\r\n  totalUsersCount: number\r\n  pageSize: number\r\n  currentPage: number\r\n  onPageChanged: (p: number)=> void\r\n}\r\n\r\nexport const Paginator: FC<PropsType> = ({\r\n                                             portionSize = 10,\r\n                                             totalUsersCount,\r\n                                             pageSize,\r\n                                             currentPage,\r\n                                             onPageChanged }) => {\r\n\r\n    const isMobile: boolean = document.documentElement.clientWidth <= 480;\r\n\r\n    if (isMobile) portionSize = 5;\r\n\r\n    const pagesCount: number = Math.ceil(totalUsersCount / pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const portionCount: number = Math.ceil(pagesCount / portionSize);\r\n\r\n    const [portionNumber, setPortionNumber] = useState<number>(Math.ceil(\r\n        currentPage / portionSize));\r\n\r\n    const leftPortionPageNumber: number = (\r\n        portionNumber - 1\r\n    ) * portionSize + 1;\r\n\r\n    const rightPortionPageNumber: number = portionNumber * portionSize;\r\n\r\n    const currentPages: Array<ReactNode> = pages\r\n        .filter(\r\n            p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n        .map((p) => {\r\n            return <span\r\n                className={p === currentPage ?\r\n                    `${classes.pageNumber} ${classes.selectedPage}` :\r\n                    classes.pageNumber}\r\n                key={p}\r\n                onClick={() => {\r\n                    onPageChanged(p);\r\n                }}>{p}</span>\r\n        });\r\n\r\n    const onPortionNumber = (e: React.MouseEvent<HTMLDivElement>, k: number) => {\r\n        setPortionNumber(portionNumber + k);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.paginator_wrapper}>\r\n\r\n            <div className={classes.paginator}>\r\n                {portionNumber > 1 &&\r\n                <div\r\n                    onClick={(e: React.MouseEvent<HTMLDivElement>) => onPortionNumber(e, -1)}\r\n                    className={`${classes.icon} ${classes.left}`}>\r\n                    <div className={classes.arrow}/>\r\n                </div>}\r\n                {currentPages}\r\n                {portionCount > portionNumber &&\r\n                <div onClick={(e) => onPortionNumber(e, +1)}\r\n                     className={classes.icon}>\r\n                    <div className={classes.arrow}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React, {FC, useEffect} from 'react'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport classes from './Users.module.scss'\r\nimport {useLocation, useParams} from 'react-router'\r\nimport {RootState} from '@store/root-reducer'\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsersPage\r\n} from '@users/modules/users/selectors'\r\nimport {getUsers, search, usersActions} from '@users/modules/users/actions'\r\nimport {User} from '@users/ui/organisms/User/User'\r\nimport {Paginator} from '@ui/organisms/Paginator/Paginator'\r\nimport {Preloader} from '@ui/atoms/preloader/Preloader'\r\n\r\n\r\nlet isEmpty = (arr: Array<any>) => {\r\n  for (let key in arr) {\r\n\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\ntype IUsersParams = {\r\n  term: string\r\n}\r\n\r\nexport const Users: FC = () => {\r\n\r\n  const path = useLocation().pathname;\r\n  const isFriends = path === \"/friends\";\r\n  const searchTerm = useParams<IUsersParams>().term;\r\n  const {\r\n    users: usersList, pageSize, totalUsersCount, currentPage, isFetching, isFollowing, isAuth\r\n  } = useSelector((state: RootState) => (\r\n      {\r\n        users: getUsersPage(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        isFollowing: getFollowingInProgress(state),\r\n        isAuth: state.auth.isAuth\r\n      }\r\n  ), shallowEqual);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (path.startsWith(\"/search/\")) {\r\n      dispatch(search(searchTerm));\r\n    } else {\r\n      dispatch(getUsers(pageSize,\r\n          currentPage,\r\n          isFriends));\r\n    }\r\n  }, [currentPage, pageSize, dispatch, path, isFriends, searchTerm]);\r\n\r\n  const onPageChanged = (currentPage: number): void => {\r\n    dispatch(usersActions.setCurrentPage(currentPage))\r\n  };\r\n\r\n\r\n  const users = usersList.map((user) => {\r\n\r\n    return (\r\n        <User key={user.id} isAuth={isAuth}\r\n            photo={user.photos.small}\r\n            status={user.status}\r\n            id={user.id}\r\n            followed={user.followed}\r\n            fullName={user.name}\r\n            isFollowing={isFollowing}\r\n        />\r\n    );\r\n  });\r\n\r\n  return (\r\n      <>\r\n        {isFetching ?\r\n            <Preloader/> :\r\n            (\r\n                <>\r\n                  <div className={classes.users}>\r\n                    {isEmpty(users) ?\r\n                        <p className={classes.users_notFound}>Sorry,\r\n                          nothing\r\n                          found</p> :\r\n                        users}\r\n\r\n                  </div>\r\n                  <Paginator totalUsersCount={totalUsersCount}\r\n                      pageSize={pageSize} currentPage={currentPage}\r\n                      onPageChanged={onPageChanged}/>\r\n                </>\r\n            )}\r\n      </>\r\n  );\r\n};\r\n\r\n","import React, {FC, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport styles from './FriendsBar.module.scss'\r\nimport avatar_undefined from '../../../../../ui/assets/images/avatar-undefined.jpg'\r\nimport {Link, NavLink} from 'react-router-dom'\r\nimport {getFriendsDemo} from '../../../modules/users/actions'\r\nimport {RootState} from '../../../../../lib/store/root-reducer'\r\nimport {Preloader} from '../../../../../ui/atoms/preloader/Preloader'\r\n\r\n\r\ninterface PropsType {\r\n    clearPage: React.EventHandler<React.MouseEvent>\r\n}\r\n\r\nexport const FriendsBar: FC<PropsType> = ({clearPage}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getFriendsDemo(6, 1))\r\n    }, [dispatch])\r\n\r\n    const friends = useSelector((state: RootState) => state.usersPage.friends)\r\n\r\n    const friendsElements = friends.map((friend) => {\r\n\r\n        return (\r\n            <div key={friend.id} className={styles.friend}>\r\n                <Link to={`/profile/${friend.id}`}>\r\n                    <img className={styles.friendPhoto}\r\n                         src={friend.photos?.small || avatar_undefined}\r\n                         alt=\"\"/>\r\n                    <p className={styles.friendName}>{friend.name}</p>\r\n                </Link>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {friends.length === 0 ?\r\n                <Preloader/> :\r\n                <aside className={styles.friendsBar}>\r\n                    <h3 onClick={clearPage}>\r\n                        <NavLink\r\n                            activeClassName={styles.active}\r\n                            to=\"/friends\">Friends</NavLink>\r\n                    </h3>\r\n                    <div className={styles.friendInfo}>\r\n                        {friendsElements}\r\n                    </div>\r\n                </aside>}\r\n        </>\r\n    )\r\n}","import React, {FC} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"../../lib/store/root-reducer\";\r\nimport {FriendsBar} from './ui/moleculs/FriendsBar/FriendsBar'\r\n\r\nexport interface IFriendsProps {\r\n  clearPage: () => void\r\n}\r\n\r\nexport const Friends: FC<IFriendsProps> = ({clearPage}) => {\r\n\r\n  const isMobile: boolean = document.documentElement.clientWidth <= 860;\r\n\r\n  const isAuth: boolean = useSelector((state: RootState) => state.auth.isAuth);\r\n\r\n  return isAuth && !isMobile ?\r\n      <FriendsBar clearPage={clearPage}/> : null\r\n};","import React, {FC} from \"react\";\r\nimport styles from \"./UsersSearch.module.scss\"\r\n\r\ninterface IUsesrsSearchProps {\r\n  searchTerm: string\r\n  onSearch: React.EventHandler<React.KeyboardEvent>\r\n  onChange: React.EventHandler<React.ChangeEvent>\r\n}\r\n\r\nexport const UsersSearch: FC<IUsesrsSearchProps> = ({searchTerm, onSearch, onChange}) => {\r\n  return (\r\n\r\n      <div className={styles.usersSearch}>\r\n        <p><input autoComplete=\"off\" onKeyDown={onSearch}\r\n            placeholder=\"Find User\" type=\"text\"\r\n            value={searchTerm} onChange={onChange}/>\r\n          <i className=\"fa fa-search\"/>\r\n        </p>\r\n      </div>\r\n\r\n  )\r\n};","import React, {FC, useState} from \"react\";\r\nimport {useHistory} from \"react-router\";\r\nimport {UsersSearch} from './ui/moleculs/UsersSearch/UsersSearch'\r\n\r\n\r\nexport const Search: FC = () => {\r\n  const history = useHistory();\r\n  const [searchTerm, setSearchTerm] = useState<string>('');\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n  const onSearch = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === \"Enter\") history.push(`/search/${searchTerm}`)\r\n  };\r\n  return (\r\n      <UsersSearch searchTerm={searchTerm}\r\n          onChange={onChange} onSearch={onSearch}/>\r\n  )\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Navbar_container__bPROr\",\"mcd-menu\":\"Navbar_mcd-menu__1dl6u\",\"active\":\"Navbar_active__30xB3\"};","import React, {FC} from 'react'\r\nimport classes from './Preloader.module.scss'\r\n\r\n\r\nexport const Preloader: FC = () => {\r\n    return (\r\n        <div className={classes.cssload_loader}>\r\n            <div className={`${classes.cssload_inner} ${classes.cssload_one} `}></div>\r\n            <div className={`${classes.cssload_inner} ${classes.cssload_two} `}></div>\r\n            <div className={`${classes.cssload_inner} ${classes.cssload_three} `}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1NvHy\",\"cssload_loader\":\"Preloader_cssload_loader__3bGq4\",\"cssload_inner\":\"Preloader_cssload_inner__jGbvQ\",\"cssload_one\":\"Preloader_cssload_one__1YyfL\",\"cssload-rotate-one\":\"Preloader_cssload-rotate-one__37_lG\",\"cssload_two\":\"Preloader_cssload_two__29jxm\",\"cssload-rotate-two\":\"Preloader_cssload-rotate-two__1K7y1\",\"cssload_three\":\"Preloader_cssload_three__3qFuE\",\"cssload-rotate-three\":\"Preloader_cssload-rotate-three__3_wsA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__1e5gT\",\"user_info\":\"User_user_info__CIH-X\",\"user_photo\":\"User_user_photo__3CIRy\",\"user_info_status\":\"User_user_info_status__1ZYUf\",\"btn_container\":\"User_btn_container__1TLP_\",\"sendMsg_btn\":\"User_sendMsg_btn__3aqc1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsBar\":\"FriendsBar_friendsBar__1DOOZ\",\"friendInfo\":\"FriendsBar_friendInfo__1wZBq\",\"friend\":\"FriendsBar_friend__3V4DM\",\"active\":\"FriendsBar_active__2BGw1\"};","import {ThunkType} from './reducer'\r\nimport {\r\n    authAPI,\r\n    profileAPI,\r\n    ProfileType,\r\n    securityAPI\r\n} from '../../../../api/socialApi'\r\n\r\n\r\n// ==========Action Creators======================\r\n\r\nexport const actions = {\r\n    setAuthUserData: (user: undefined | ProfileType,\r\n                      isAuth: boolean) => ({\r\n        type: 'SN/auth/SET_USER_DATA',\r\n        user: {\r\n            ...user\r\n        },\r\n        isAuth\r\n    } as const),\r\n    getCaptchaUrlSuccess: (captchaUrl: string | null) => ({\r\n        type: 'SN/auth/GET_CAPTCHA_URL_SUCCESS',\r\n        captchaUrl\r\n    } as const)\r\n}\r\n\r\n\r\n// =====================Thunk Creators====================\r\n\r\nexport const getAuth = (isAuth: boolean): ThunkType => async (dispatch) => {\r\n\r\n    let data = await authAPI.me()\r\n\r\n    if (data) {\r\n        const authUserProfile: ProfileType = await profileAPI.getProfile(data.id)\r\n        dispatch(actions.setAuthUserData(authUserProfile, isAuth))\r\n    }\r\n\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => async (dispatch) => {\r\n\r\n    let data = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (data.resultCode === 0) {\r\n        await dispatch(getAuth(true))\r\n    } else {\r\n        if (data.resultCode === 10) {\r\n           await dispatch(getCaptchaUrl())\r\n        }\r\n        const error = data.messages.length > 0 ?\r\n            data.messages[0] :\r\n            \"Unknown Error\";\r\n        return error;\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = (): ThunkType => async (dispatch) => {\r\n    let data = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = data.url\r\n    dispatch(actions.getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport const logout = (): ThunkType => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actions.setAuthUserData(undefined, false))\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userInfo\":\"UserAuthInfoBar_userInfo__OOWXH\",\"userInfo_photo\":\"UserAuthInfoBar_userInfo_photo__GiG03\",\"userInfo_name\":\"UserAuthInfoBar_userInfo_name__2EI8C\",\"login_link\":\"UserAuthInfoBar_login_link__qc4wd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3S5Ot\",\"header_content\":\"Header_header_content__1jeoT\",\"logo_wrapper\":\"Header_logo_wrapper__2DKMU\",\"header_logo\":\"Header_header_logo__1Vz4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"common_input\":\"LoginForm_common_input__1GhB-\",\"send_btn\":\"LoginForm_send_btn__2o1l2\",\"switch\":\"LoginForm_switch__2Bnre\",\"input_error\":\"LoginForm_input_error__SEroT\",\"error\":\"LoginForm_error__PnKPK\",\"span_error\":\"LoginForm_span_error__1LIow\"};","module.exports = __webpack_public_path__ + \"static/media/avatar-undefined.54c6edcf.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"Dropdown_dropdown__10R0R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app_wrapper\":\"Common_app_wrapper__3xtfL\",\"content_wrapper\":\"Common_content_wrapper__GXNjy\",\"app_content\":\"Common_app_content__3n0Ib\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__364nf\",\"users_notFound\":\"Users_users_notFound__2TCK0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"followBtn\":\"Followbtn_followBtn__3yGH7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1AnqI\",\"footer_content\":\"Footer_footer_content__2ESLO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersSearch\":\"UsersSearch_usersSearch__1InsJ\"};","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logout\":\"Logout_logout__2KSkG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sign_in\":\"SignIn_sign_in__f8gOH\"};","import {chatAPI, ChatMessageAPIType, StatusType} from '@api/socialApi'\r\nimport {ThunkType} from '@chat/modules/reducer'\r\n\r\n\r\nexport const chatActions = {\r\n    messagesReceived: (messages: ChatMessageAPIType[]) => ({\r\n        type: 'SN/chat/MESSAGES_RECEVIED', payload: {messages}\r\n    } as const),\r\n    statusChanged: (status: StatusType) => ({\r\n        type: 'SN/chat/STATUS_CHANGED', payload: {status}\r\n    } as const)\r\n}\r\n\r\nlet _newMessageHandler: ((messages: ChatMessageAPIType[]) => void) | null = null\r\nconst newMessageHandlerCreator = (dispatch: any) => {\r\n    if (_newMessageHandler === null) {\r\n        _newMessageHandler = (messages) => {\r\n            dispatch(chatActions.messagesReceived(messages))\r\n        }\r\n    }\r\n    return _newMessageHandler\r\n}\r\n\r\nlet _statusChangedHandler: ((status: StatusType) => void) | null = null\r\nconst statusChangedHandlerCreator = (dispatch: any) => {\r\n    if (_statusChangedHandler === null) {\r\n        _statusChangedHandler = (status) => {\r\n            dispatch(chatActions.statusChanged(status))\r\n        }\r\n    }\r\n    return _statusChangedHandler\r\n}\r\n\r\nexport const startMessagesListening = (): ThunkType => async (dispatch) => {\r\n    chatAPI.start()\r\n    chatAPI.subscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n    chatAPI.subscribe('status-changed', statusChangedHandlerCreator(dispatch))\r\n\r\n}\r\nexport const stopMessagesListening = (): ThunkType => async (dispatch) => {\r\n    chatAPI.unsubscribe('messages-received', newMessageHandlerCreator(dispatch))\r\n    chatAPI.unsubscribe('status-changed', statusChangedHandlerCreator(dispatch))\r\n    chatAPI.stop()\r\n}\r\n\r\nexport const sendMessage = (message: string): ThunkType => async (dispatch) => {\r\n    chatAPI.sendMessage(message)\r\n}","import React from 'react'\r\nimport {ChatMessageAPIType} from '@api/socialApi'\r\n\r\n\r\n\r\nconst Message: React.FC<{ message: ChatMessageAPIType }> = React.memo( ({message}) => {\r\n    console.log(\">>>>>>Message\")\r\n    return <div>\r\n        <img src={message.photo} style={{width: '30px'}}/> <b>{message.userName}</b>\r\n        <br/>\r\n        {message.message}\r\n        <hr/>\r\n    </div>\r\n})\r\n\r\nexport default Message\r\n","import React, {useEffect, useRef, useState} from 'react'\r\nimport Message from '@chat/Message'\r\nimport {useSelector} from 'react-redux'\r\nimport {RootState} from '@store/root-reducer'\r\n\r\n\r\nexport const Messages: React.FC<{}> = ({}) => {\r\n    const messages = useSelector((state: RootState) => state.chat.messages)\r\n    const messagesAnchorRef = useRef<HTMLDivElement>(null)\r\n    const [isAutoScroll, setIsAutoScroll] = useState(true)\r\n\r\n    const scrollHandler = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\r\n        const element = e.currentTarget\r\n        if (Math.abs((element.scrollHeight - element.scrollTop) - element.clientHeight) < 300) {\r\n            !isAutoScroll && setIsAutoScroll(true)\r\n        } else {\r\n            isAutoScroll && setIsAutoScroll(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isAutoScroll) {\r\n            messagesAnchorRef.current?.scrollIntoView({behavior: 'smooth'})\r\n        }\r\n    }, [messages])\r\n\r\n    return (\r\n        <div style={{height: '400px', overflowY: 'auto'}} onScroll={scrollHandler}>\r\n            {messages.map((m, index) => <Message key={m.id} message={m}/>)}\r\n            <div ref={messagesAnchorRef}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {RootState} from '@store/root-reducer'\r\nimport {sendMessage} from '@chat/modules/actions'\r\n\r\n\r\n\r\nexport const AddMessagesForm: React.FC<{}> = () => {\r\n    const [message, setMessage] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const status = useSelector((state: RootState) => state.chat.status)\r\n\r\n\r\n    const sendMessageHandler = () => {\r\n        if (!message) {\r\n            return\r\n        }\r\n        dispatch(sendMessage(message))\r\n        setMessage('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <textarea onChange={(e) => setMessage(e.currentTarget.value)} value={message}></textarea>\r\n            </div>\r\n            <div>\r\n                <button disabled={status !== 'ready'} onClick={sendMessageHandler}>Send</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {RootState} from '@store/root-reducer'\r\nimport {startMessagesListening, stopMessagesListening} from '@chat/modules/actions'\r\nimport {Messages} from '@chat/Messages'\r\nimport {AddMessagesForm} from '@chat/AddMessagesForm'\r\n\r\n\r\n\r\n\r\nexport type DialogsMessageType = {\r\n    message: string,\r\n    photo: string,\r\n    userId: number,\r\n    userName: string\r\n}\r\n\r\nconst Chat: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const status = useSelector((state: RootState) => state.chat.status)\r\n\r\n    useEffect(() => {\r\n        dispatch(startMessagesListening())\r\n        return () => {\r\n            dispatch(stopMessagesListening())\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {status === 'error' && <div>Some error occured. Please refresh the page</div>}\r\n            <>\r\n                <Messages />\r\n                <AddMessagesForm />\r\n            </>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","import React, {FC} from \"react\";\r\nimport {CommonTemplate} from '@ui/templates/Common'\r\nimport Chat from '@chat/Chat'\r\n\r\n\r\nconst ChatPage:FC = () => {\r\n  return(\r\n    <CommonTemplate>\r\n      <Chat/>\r\n    </CommonTemplate>\r\n  )\r\n};\r\n\r\nexport default ChatPage","import React from 'react'\r\nimport {CommonTemplate} from '@ui/templates/Common'\r\nimport {Users} from '@users'\r\n\r\n\r\nconst UsersPage = () => {\r\n\r\n    return (\r\n        <CommonTemplate>\r\n            <Users/>\r\n        </CommonTemplate>\r\n    )\r\n}\r\n\r\nexport default UsersPage","import React from 'react'\r\nimport {CommonTemplate} from '@ui/templates/Common'\r\nimport {Users} from '@users'\r\n\r\n\r\nconst FriendsPage = () => {\r\n    return (\r\n        <CommonTemplate>\r\n            <Users/>\r\n        </CommonTemplate>\r\n    )\r\n}\r\n\r\nexport default FriendsPage","import React from 'react'\r\nimport {CommonTemplate} from '@ui/templates/Common'\r\nimport {Users} from '@users'\r\n\r\n\r\nconst SearchPage = () => {\r\n\r\n    return (\r\n        <CommonTemplate>\r\n            <Users/>\r\n        </CommonTemplate>\r\n    )\r\n}\r\n\r\nexport default SearchPage","import React from 'react'\r\nimport {useForm} from 'react-hook-form'\r\nimport {useDispatch} from 'react-redux'\r\nimport classes from './LoginForm.module.scss'\r\nimport {login} from '@auth/modules/authorization/actions'\r\n\r\n\r\ntype ILoginFormProps = {\r\n    captchaUrl: string | null\r\n}\r\n\r\n\r\nexport const LoginForm: React.FC<ILoginFormProps> = ({captchaUrl}) => {\r\n\r\n    const {register, errors, handleSubmit} = useForm();\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData: any) => {\r\n        dispatch(login(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div>\r\n                <input name='email'\r\n                        ref={register({\r\n                            required: \"Please  enter your email\"\r\n                        })}\r\n                        placeholder='e-mail'/>\r\n                        <span className={classes.span_error}>{errors.name}</span>\r\n            </div>\r\n            <div><input name='password'\r\n                        ref={register({\r\n                            required: \"Please enter your password\"\r\n                        })}\r\n                        type=\"password\"\r\n                        placeholder='password'\r\n            />\r\n                <span className={classes.span_error}>{errors.name}</span>\r\n            </div>\r\n            <div>\r\n                <input name='rememberMe'\r\n                       type=\"checkbox\"/>\r\n                <label htmlFor=\"rememberMe\">Remember Me</label>\r\n            </div>\r\n            {captchaUrl ?\r\n                <><img alt=\"captcha\" src={captchaUrl}/>\r\n                    <input name='captcha'\r\n                           placeholder='Enter symbols'\r\n                           ref={register({\r\n                               required: \"Please enter symbols\"\r\n                           })} type=\"text\"/>\r\n                    <span className={classes.span_error}>{errors.name}</span>\r\n                    {errors.captcha && \"Captcha is required\"}\r\n                </> :\r\n                \"\"}\r\n            <div>\r\n                <p className={classes.span_error}>{errors.name}</p>\r\n                <input\r\n                    value={\"Login\"} type=\"submit\"/>\r\n            </div>\r\n        </form>\r\n    )\r\n};","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {RootState} from '@store/root-reducer'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {LoginForm} from '@auth/ui/organisms/LoginForm/LoginForm'\r\n\r\n\r\nexport const Login: React.FC = () => {\r\n    const {isAuth, captchaUrl} = useSelector((state: RootState) => (\r\n        {\r\n            isAuth: state.auth.isAuth,\r\n            captchaUrl: state.auth.captchaUrl\r\n        }\r\n    ))\r\n\r\n\r\n    return isAuth ? <Redirect to={'/profile'}/> :\r\n        (\r\n            <div>\r\n                <h1>Please, log in...</h1>\r\n                <LoginForm captchaUrl={captchaUrl}/>\r\n            </div>\r\n        )\r\n\r\n}","import React from \"react\";\r\nimport {CommonTemplate} from '@ui/templates/Common'\r\nimport {Login} from '@auth/Login'\r\n\r\n\r\nconst LoginPage = () => {\r\n  return(\r\n    <CommonTemplate>\r\n      <Login/>\r\n    </CommonTemplate>\r\n  )\r\n};\r\n\r\nexport default LoginPage","import {Redirect, Route, Switch} from \"react-router\";\r\nimport React, {lazy, Suspense} from \"react\";\r\nimport {ChatPage, UsersPage, FriendsPage, SearchPage, LoginPage} from '@pages'\r\nimport {Preloader} from '@ui/atoms/preloader/Preloader'\r\n\r\n\r\nconst ProfilePage = lazy(() => import(\"@pages/profile\").then(({ProfilePage}) => (\r\n  {default: ProfilePage}\r\n)));\r\n\r\nconst NewsPage = lazy(() => import(\"@pages/news\").then(({NewsPage}) => (\r\n  {default: NewsPage}\r\n)));\r\n\r\nconst MusicPage = lazy(() => import(\"@pages/music\").then(({MusicPage}) => (\r\n  {default: MusicPage}\r\n)));\r\n\r\nexport const Routes = () => {\r\n\r\n  return <Suspense fallback={<Preloader/>}>\r\n    <Switch>\r\n      <Route path={'/profile/:userId?'}>\r\n        <ProfilePage/>\r\n      </Route>\r\n      <Route path=\"/news\">\r\n        <NewsPage/>\r\n      </Route>\r\n      <Route path=\"/music\">\r\n        <MusicPage/>\r\n      </Route>\r\n      <Route path=\"/chat\">\r\n        <ChatPage/>\r\n      </Route>\r\n      <Route path=\"/users/\">\r\n        <UsersPage/>\r\n      </Route>\r\n      <Route path=\"/friends\">\r\n        <FriendsPage/>\r\n      </Route>\r\n      <Route path=\"/search/:term?\">\r\n        <SearchPage/>\r\n      </Route>\r\n      <Route path=\"/login\">\r\n        <LoginPage/>\r\n      </Route>\r\n      <Redirect exact from=\"/\" to=\"/profile/\"/>\r\n      <Route render={() => (\r\n        <div>404 NOT FOUND</div>\r\n      )}/>\r\n    </Switch>\r\n  </Suspense>\r\n};","import {getAuth} from '../authorization/actions'\r\n\r\n\r\n// ==========Action Creators======================\r\n\r\n\r\nexport const initActions = {\r\n    initializedSuccess: () => ({type: 'SN/APP/INITIALIZED_SUCCESS'} as const)\r\n}\r\n\r\n// =====================Thunk Creators====================\r\n\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    return dispatch(getAuth(true)).then(() => {\r\n        dispatch(initActions.initializedSuccess())\r\n    })\r\n}\r\n","import React, {Component} from 'react'\r\nimport './App.module.scss'\r\nimport {HashRouter} from 'react-router-dom'\r\nimport {connect, ConnectedProps} from 'react-redux'\r\nimport {Routes} from './Routes'\r\nimport {DispatchType, RootState} from '@store/root-reducer'\r\nimport {initializeApp} from '@auth/modules/initialization/actions'\r\nimport {Preloader} from '@ui/atoms/preloader/Preloader'\r\n\r\n\r\n\r\n// ===================================\r\nconst MapStateToProps = (state: RootState) => (\r\n    {\r\n        initialized: state.init.initialized\r\n    })\r\n\r\nconst mapDispatchToProps = (dispatch: DispatchType) => {\r\n    return {\r\n        initializeApp: () => dispatch(initializeApp()),\r\n    }\r\n}\r\nconst connector = connect(MapStateToProps, mapDispatchToProps)\r\ntype AppProps = ConnectedProps<typeof connector>\r\n\r\n\r\nclass App extends Component<AppProps> {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n    render() {\r\n        if (!this.props.initialized) return <Preloader/>\r\n        return (\r\n            <HashRouter>\r\n                <Routes/>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connector(App)","import {BaseThunkType, InferActionsTypes} from '@store/root-reducer'\r\nimport {profileActions} from '@profile/modules/profile/actions'\r\nimport {ProfileType} from '@api/socialApi'\r\n\r\n\r\nexport type ActionsTypes = InferActionsTypes<typeof profileActions>\r\nexport type ThunkType = BaseThunkType<ActionsTypes>\r\n\r\ntype ProfileState = {\r\n    isFollowing: boolean,\r\n    followed: boolean,\r\n    profile: null  | ProfileType,\r\n    status: string\r\n}\r\n\r\nexport const initialState: ProfileState = {\r\n    isFollowing: false,\r\n    followed:false,\r\n    profile: null,\r\n    status: \"Статус Редакса\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action: ActionsTypes): ProfileState => {\r\n    switch (action.type) {\r\n        case 'SN/PROFILE/SET_USERS_PROFILE': {\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            }\r\n        }\r\n        case 'SN/PROFILE/SET_STATUS': {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        }\r\n        case 'SN/PROFILE/SAVE_PHOTO_SUCCESS': {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos} as ProfileType,\r\n            }\r\n        }\r\n        case 'SN/PROFILE/TOGGLE_IS_FOLLOWING': {\r\n            return {\r\n                ...state,\r\n                isFollowing: action.isFollowing\r\n            }\r\n        }\r\n        case 'SN/PROFILE/IS_FOLLOWED': {\r\n            return {\r\n                ...state,\r\n                followed: action.isFollowed\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default profileReducer","import {UserType} from '../api/socialApi'\r\n\r\n\r\nexport const updateObjectInArray = (items: Array<UserType>,\r\n  itemId:number,  newItemObjProps: {followed: boolean}):  Array<UserType> => {\r\n  return items.map((item) => {\r\n    if (item.id === itemId) {\r\n      return {\r\n        ...item, ...newItemObjProps\r\n      };\r\n    } else {\r\n      return item;\r\n    }\r\n  })\r\n};","import {BaseThunkType, InferActionsTypes} from '../../../../lib/store/root-reducer'\r\nimport {UserType} from '../../../../api/socialApi'\r\nimport {usersActions} from './actions'\r\nimport {updateObjectInArray} from '../../../../utils/obj-helpers'\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\nexport type ActionsTypes = InferActionsTypes<typeof usersActions>\r\nexport type ThunkType = BaseThunkType<ActionsTypes>\r\n\r\n\r\n\r\n\r\nexport let initialState = {\r\n    users: [] as Array<UserType>,\r\n    friends: [] as Array<UserType>,\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number>, // array of users ids\r\n}\r\n\r\n\r\nconst usersReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/USERS/FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users,\r\n                    action.userId,\r\n                    {followed: true})\r\n            };\r\n        case 'SN/USERS/UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users,\r\n                    action.userId,\r\n                    {followed: false})\r\n            };\r\n        case 'SN/USERS/SET_USERS':\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            };\r\n        case 'SN/USERS/SET_FRIENDS':\r\n            return {\r\n                ...state,\r\n                friends: [...action.friends]\r\n            };\r\n        case 'SN/USERS/SET_CURRENT_PAGE':\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            };\r\n        case 'SN/USERS/SET_TOTAL_USERS_COUNT':\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            };\r\n        case 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS':\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ?\r\n                    [...state.followingInProgress, action.userId] :\r\n                    state.followingInProgress.filter((userId) => action.userId !== userId),\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersReducer\r\n","import {ChatMessageAPIType, StatusType} from '@api/socialApi'\r\nimport {chatActions} from '@chat/modules/actions'\r\nimport {BaseThunkType, InferActionsTypes} from '@store/root-reducer'\r\nimport {v1} from 'uuid'\r\n\r\n\r\ntype ChatMessageType = ChatMessageAPIType & {id: string}\r\n\r\nlet initialState = {\r\n    messages: [] as ChatMessageType[],\r\n    status: 'pending' as StatusType\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\nexport type ActionsType = InferActionsTypes<typeof chatActions>\r\nexport type ThunkType = BaseThunkType<ActionsType>\r\n\r\n\r\n\r\nconst chatReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/chat/MESSAGES_RECEVIED':\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, ...action.payload.messages.map( m => ({...m, id: v1() }))]\r\n                    .filter((m, index, array) => index >= array.length - 100)\r\n            }\r\n        case 'SN/chat/STATUS_CHANGED':\r\n            return {\r\n                ...state,\r\n                status: action.payload.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default chatReducer","import {BaseThunkType, InferActionsTypes} from '../../../../lib/store/root-reducer'\r\nimport {actions} from './actions'\r\nimport {ProfileType} from '../../../../api/socialApi'\r\n\r\n\r\nexport type InitialStateType = {\r\n    user: ProfileType,\r\n    isAuth: boolean,\r\n    captchaUrl: string | null\r\n}\r\n\r\n\r\nexport type ActionsTypes = InferActionsTypes<typeof actions>\r\nexport type ThunkType = BaseThunkType<ActionsTypes>\r\n\r\n\r\nexport let initialState: InitialStateType = {\r\n    user: {\r\n        aboutMe: null,\r\n        contacts: null,\r\n        lookingForAJob: null,\r\n        lookingForAJobDescription: null,\r\n        fullName: null,\r\n        userId: null,\r\n        photos: null,\r\n    },\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/auth/SET_USER_DATA':\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...action.user,\r\n                },\r\n                isAuth: action.isAuth\r\n            }\r\n        case 'SN/auth/GET_CAPTCHA_URL_SUCCESS':\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.captchaUrl\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import {InferActionsTypes} from '../../../../lib/store/root-reducer'\r\nimport {initActions} from './actions'\r\n\r\n\r\nexport type InitialStateType = typeof initialState\r\nexport type ActionsType = InferActionsTypes<typeof initActions>\r\n\r\n\r\nexport let initialState = {\r\n    initialized: false\r\n}\r\n\r\n\r\nexport const initReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/APP/INITIALIZED_SUCCESS':\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {IArticle} from '../../../../api/newsApi'\r\nimport {InferActionsTypes} from '../../../../lib/store/root-reducer'\r\nimport {newsActions} from './actions'\r\n\r\n\r\nexport type ActionsTypes = InferActionsTypes<typeof newsActions>\r\n\r\n\r\ntype NewsStateType = {\r\n    articles: Array<IArticle> | null\r\n}\r\n\r\n\r\nexport const initialState: NewsStateType = {\r\n    articles: null\r\n}\r\n\r\nexport const newsReducer = (state = initialState,\r\n                        action: ActionsTypes): NewsStateType => {\r\n    switch (action.type) {\r\n        case 'NEWS/SET_NEWS':\r\n            return {\r\n                ...state,\r\n                articles: action.articles\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {IMusicCategory, IMusicResponse, ITracks} from '../../../../api/musicApi'\r\nimport {InferActionsTypes} from '../../../../lib/store/root-reducer'\r\nimport {musicActions} from './actions'\r\n\r\n\r\nexport type ActionsTypes = InferActionsTypes<typeof musicActions>\r\n\r\ntype MusicStateType = {\r\n  charts: null | IMusicResponse,\r\n  searchResults : null | IMusicCategory<ITracks>\r\n}\r\n\r\nexport const initialState: MusicStateType = {\r\n  charts: null,\r\n  searchResults: null\r\n};\r\n\r\nexport const musicReducer = (state = initialState,\r\n                        action: ActionsTypes): MusicStateType => {\r\n  switch (action.type) {\r\n    case 'MUSIC/SET_MUSIC_CHARTS':\r\n      return {\r\n        ...state,\r\n        charts: action.charts\r\n      };\r\n    case 'MUSIC/SET_SEARCH_RESULTS':\r\n      return {\r\n        ...state,\r\n        searchResults: action.searchResults\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {Action, AnyAction, combineReducers} from 'redux'\r\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk'\r\nimport profileReducer from '@profile/modules/profile/reducer'\r\nimport usersReducer from '@users/modules/users/reducer'\r\nimport chatReducer from '@chat/modules/reducer'\r\nimport {authReducer} from '@auth/modules/authorization/reducer'\r\nimport {initReducer} from '@auth/modules/initialization/reducer'\r\nimport {newsReducer} from '@news/modules/news/reducer'\r\nimport {musicReducer} from '@music/modules/music/reducer'\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    chat: chatReducer,\r\n    auth: authReducer,\r\n    init: initReducer,\r\n    news: newsReducer,\r\n    music: musicReducer\r\n})\r\n\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport type InferActionsTypes<T> = T extends { [key: string]: (...args: any[]) => infer U } ? U : never\r\n\r\n\r\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, RootState, unknown, A>\r\n\r\nexport type DispatchType = ThunkDispatch<RootState, void, AnyAction>;","import {applyMiddleware, compose, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {rootReducer} from './root-reducer'\r\n\r\n\r\nexport const composeEnhancers = (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose\r\n//Redux dev tools for Chrome\r\n\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport {Provider} from 'react-redux'\r\nimport {store} from '@store/store'\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n\r\n"],"sourceRoot":""}