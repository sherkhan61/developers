{"version":3,"sources":["features/profile/ui/organisms/ProfileInfo/ProfileInfo.module.scss","features/profile/ui/atoms/ProfileStatus/ProfileStatus.module.scss","features/profile/ui/molecules/ProfileDescription/ProfileDescription.module.scss","features/profile/ui/molecules/ProfileForm/ProfileForm.module.scss","features/profile/ui/molecules/Contacts/Contacts.module.scss","features/profile/modules/profile/actions.ts","features/profile/ui/atoms/ProfileStatus/ProfileStatus.tsx","features/profile/ui/molecules/ProfileForm/ProfileForm.tsx","features/profile/ui/molecules/Contacts/Contacts.tsx","features/profile/ui/molecules/ProfileDescription/ProfileDescription.tsx","features/profile/ui/organisms/ProfileInfo/ProfileInfo.tsx","features/profile/Profile.tsx","features/authentication/hooks/useAuthRedirect.ts","pages/profile/index.tsx"],"names":["module","exports","profileActions","profile","type","status","photos","isFollowing","isFollowed","getProfile","userId","dispatch","a","profileAPI","data","saveProfile","getState","response","resultCode","auth","user","messages","ProfileStatus","isOwner","userStatus","useSelector","state","profilePage","useState","setStatus","editMode","setEditMode","useEffect","useDispatch","className","classes","profileStatus","profileStatus_textarea","autoFocus","onChange","e","target","value","onBlur","updateStatus","style","cursor","onClick","ProfileForm","contacts","lookingForAJob","lookingForAJobDescription","fullName","closeEditMode","useForm","register","handleSubmit","errors","trigger","setError","onSubmit","profileData","Array","isArray","length","forEach","message","contactItems","Object","entries","map","item","index","key","contacts_item","charAt","toUpperCase","slice","contacts_input","ref","maxLength","name","defaultValue","error","profileForm","profileForm_close","aria-hidden","name_wrapper","placeholder","info_box","editProfile_btn","Contacts","newElements","string","contacts_link","href","contacts_header","ProfileDescription","profileDescription","about_wrapper","about","about_header","about_item","preventDefault","ProfileInfo","authUserId","myAva_img","isAuth","followed","shallowEqual","usersAPI","isUserFollowed","profileInfo_wrapper","userPhoto_block","alt","userPhoto","ownerPhoto","src","hidden","file","files","savePhoto","profileInfo","userName_container","userName","buttons","to","disabled","unfollow","getFriendsDemo","follow","Profile","history","useHistory","push","useAuthRedirect","selectedId","useParams","getStatus","small","avatarUndefined","Preloader","ProfilePage","Common"],"mappings":"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","file":"static/js/4.67d9c096.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo_wrapper\":\"ProfileInfo_profileInfo_wrapper__K1Tfx\",\"userPhoto_block\":\"ProfileInfo_userPhoto_block__3U6ET\",\"userPhoto\":\"ProfileInfo_userPhoto__FToHU\",\"ownerPhoto\":\"ProfileInfo_ownerPhoto__32tCo\",\"profileInfo\":\"ProfileInfo_profileInfo__2Qjgh\",\"userName_container\":\"ProfileInfo_userName_container__2q5_u\",\"userName\":\"ProfileInfo_userName__2mmNS\",\"buttons\":\"ProfileInfo_buttons__38Gtk\",\"error\":\"ProfileInfo_error__3gKs_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileStatus\":\"ProfileStatus_profileStatus__3ljpf\",\"profileStatus_textarea\":\"ProfileStatus_profileStatus_textarea__uPwF6\",\"userPhoto_block\":\"ProfileStatus_userPhoto_block__2Ot_6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileDescription\":\"ProfileDescription_profileDescription__1fO5V\",\"about_wrapper\":\"ProfileDescription_about_wrapper__-Siz6\",\"about\":\"ProfileDescription_about__3y2z1\",\"about_item\":\"ProfileDescription_about_item__3gKOs\",\"about_header\":\"ProfileDescription_about_header__MPP4W\",\"editProfile_btn\":\"ProfileDescription_editProfile_btn__GM_5u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileForm\":\"ProfileForm_profileForm__paqUJ\",\"profileForm_close\":\"ProfileForm_profileForm_close__2LxEr\",\"name_wrapper\":\"ProfileForm_name_wrapper__3qDIy\",\"info_box\":\"ProfileForm_info_box__1WRD2\",\"contacts_item\":\"ProfileForm_contacts_item__1XLPq\",\"editProfile_btn\":\"ProfileForm_editProfile_btn__gmCx5\",\"error\":\"ProfileForm_error__2PEvp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts__8ePKl\",\"contacts_item\":\"Contacts_contacts_item__1wLTm\",\"contacts_link\":\"Contacts_contacts_link__tsvxR\",\"contacts_header\":\"Contacts_contacts_header__3xjP4\"};","import {ThunkType} from './reducer'\r\nimport {PhotosType, profileAPI, ProfileType, usersAPI} from '@api/socialApi'\r\nimport {getFriendsDemo} from '@users/modules/users/actions'\r\nimport {DispatchType, RootState} from '@store/root-reducer'\r\n\r\n\r\n// ==========Action Creators======================\r\n\r\n\r\nexport const profileActions = {\r\n    setUsersProfile: (profile: ProfileType | null) => ({type: 'SN/PROFILE/SET_USERS_PROFILE', profile} as const),\r\n    setStatus: (status: string) => ({type: 'SN/PROFILE/SET_STATUS', status} as const),\r\n    savePhotoSuccess: (photos: PhotosType) => ({type: 'SN/PROFILE/SAVE_PHOTO_SUCCESS', photos} as const),\r\n    toggleIsFollowing: (isFollowing: boolean) => ({type: 'SN/PROFILE/TOGGLE_IS_FOLLOWING', isFollowing} as const),\r\n    isFollowed: (isFollowed: boolean) => ({type: 'SN/PROFILE/IS_FOLLOWED', isFollowed} as const)\r\n}\r\n\r\n\r\n// =====================Thunk Creators====================\r\n\r\n\r\nexport const getProfile = (userId: number): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.getProfile(userId)\r\n    dispatch(profileActions.setUsersProfile(data))\r\n}\r\n\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.getStatus(userId)\r\n    dispatch(profileActions.setStatus(data))\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.updateStatus(status)\r\n    if (data.resultCode === 0) {\r\n        dispatch(profileActions.setStatus(status))\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\r\n    let data = await profileAPI.savePhoto(file)\r\n    if (data.resultCode === 0) {\r\n        dispatch(profileActions.savePhotoSuccess(data.data.photos))\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType) => async (dispatch: DispatchType, getState: () => RootState) => {\r\n    const response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        if (\"userId\" in getState().auth.user) {\r\n            await dispatch(getProfile(getState().auth.user.userId!));\r\n        }\r\n    } else {\r\n        return response.data.messages;\r\n    }\r\n}\r\n\r\nexport const followUser = (): ThunkType => async (dispatch, getState) => {\r\n    dispatch(profileActions.toggleIsFollowing(true))\r\n    await usersAPI.follow(getState().profilePage.profile!.userId!)\r\n    dispatch(profileActions.isFollowed(true))\r\n    dispatch(profileActions.toggleIsFollowing(false))\r\n    dispatch(getFriendsDemo(6, 1))\r\n}\r\n\r\nexport const unFollowUser = (): ThunkType => async (dispatch, getState) => {\r\n    dispatch(profileActions.toggleIsFollowing(true))\r\n    await usersAPI.unfollow(getState().profilePage.profile!.userId!)\r\n    dispatch(profileActions.isFollowed(false))\r\n    dispatch(profileActions.toggleIsFollowing(false))\r\n    dispatch(getFriendsDemo(6, 1))\r\n}\r\n\r\nexport const isUserFollowed = (userId: number): ThunkType => async (dispatch) => {\r\n    let data = await usersAPI.isFollowed(userId)\r\n    dispatch(profileActions.isFollowed(data))\r\n}\r\n","import React, {FC, useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport classes from './ProfileStatus.module.scss'\r\nimport {RootState} from '../../../../../lib/store/root-reducer'\r\nimport {updateStatus} from '../../../modules/profile/actions'\r\n\r\ntype PropsType = {\r\n  isOwner:boolean\r\n}\r\n\r\nexport const ProfileStatus: FC<PropsType> = ({isOwner}) => {\r\n\r\n  const userStatus = useSelector((state: RootState) => (\r\n    state.profilePage.status\r\n  ));\r\n\r\n  let [status, setStatus] = useState<null | string>(null);\r\n  let [editMode, setEditMode] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    setStatus(userStatus)\r\n  }, [userStatus]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onStatusChange = (e: React.FocusEvent<HTMLTextAreaElement>) => {\r\n    dispatch(updateStatus(e.target.value));\r\n    setEditMode(false);\r\n  };\r\n  return (\r\n    <div className={classes.profileStatus}>\r\n      {isOwner && editMode ?\r\n        <textarea\r\n          className={classes.profileStatus_textarea} autoFocus={true}\r\n          onChange={(e) => setStatus(e.target.value)}\r\n          onBlur={onStatusChange}\r\n          value={status as string}/> :\r\n        <p style={isOwner ? {cursor: \"pointer\"} : {cursor: \"\"}} onClick={() => setEditMode(true)}>{userStatus || \"no-\" +\r\n        \" status\"}</p>}\r\n    </div>\r\n  )\r\n};\r\n","import React, {FC} from 'react'\r\nimport {useForm} from 'react-hook-form'\r\nimport {useDispatch} from 'react-redux'\r\nimport classes from './ProfileForm.module.scss'\r\nimport {saveProfile} from '@profile/modules/profile/actions'\r\nimport {ProfileType} from '@api/socialApi'\r\n\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    closeEditMode: () => void\r\n}\r\n\r\ninterface IProfileFormFields {\r\n    // FullName: string\r\n    // lookingForAJob: boolean\r\n    // LookingForAJobDescription: string\r\n    // AboutMe: string\r\n    // contactsErr?: string\r\n    // \"contacts.github\": string\r\n    // \"contacts.vk\": string\r\n    // \"contacts.facebook\": string\r\n    // \"contacts.instagram\": string\r\n    // \"contacts.twitter\": string\r\n    // \"contacts.website\": string\r\n    // \"contacts.youtube\": string\r\n    // \"contacts.mainLink\": string\r\n    [index: string]: string\r\n}\r\n\r\nexport const ProfileForm: FC<PropsType> = ({profile: {\r\n    contacts,\r\n    lookingForAJob,\r\n    lookingForAJobDescription,\r\n    fullName}, closeEditMode}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {register, handleSubmit, errors, trigger, setError} = useForm<IProfileFormFields>()\r\n\r\n    const onSubmit = async (profileData: IProfileFormFields) => {\r\n\r\n        let data = await dispatch(saveProfile(profileData))\r\n        if (Array.isArray(data) && data.length > 0) {\r\n            data.forEach(() => setError('contactsErr', {\r\n                type: 'servererror',\r\n                message: \"Invalid Url Format\"}))\r\n        } else {\r\n            closeEditMode()\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const contactItems = Object.entries(contacts!).map((item, index) => {\r\n\r\n        return <p key={index} className={classes.contacts_item}>{item[0].charAt(0)\r\n            .toUpperCase() + item[0].slice(1)}:\r\n            <input className={classes.contacts_input}\r\n                   onChange={() => trigger('contacts.' + item[0])}\r\n                   ref={register({\r\n                       maxLength: {\r\n                           value: 20,\r\n                           message: \"ERROR\"\r\n                       }\r\n                   })}\r\n                   name={'contacts.' + item[0]}\r\n                   defaultValue={item[1]}/>\r\n            <p className={classes.error}>{errors.name}</p>\r\n\r\n        </p>\r\n    })\r\n\r\n\r\n    return (\r\n        <form className={classes.profileForm}\r\n              onSubmit={handleSubmit(onSubmit)}>\r\n            <div className={classes.profileForm_close}\r\n                 onClick={closeEditMode}>\r\n                <i className=\"fa fa-times\" aria-hidden=\"true\"/>\r\n                <small>close</small>\r\n            </div>\r\n            <section className={classes.name_wrapper}><p>Full Name:\r\n                <input ref={register} placeholder={'Full Name'}\r\n                       name={'FullName'}\r\n                       defaultValue={fullName as string}/>\r\n            </p>\r\n                <p>Looking for a Job:\r\n                    <select ref={register} name=\"lookingForAJob\"\r\n                            defaultValue={lookingForAJob ?\r\n                                'yes' :\r\n                                'no'}>\r\n                        <option value={'true'}>Yes</option>\r\n                        <option value={'false'}>No</option>\r\n                    </select>\r\n                </p>\r\n            </section>\r\n            <p>My professional skills:\r\n                <input ref={register} name={'LookingForAJobDescription'}\r\n                       defaultValue={lookingForAJobDescription as string}/>\r\n            </p>\r\n            <p>About Me:\r\n                <input ref={register} name={'AboutMe'}\r\n                       defaultValue='About me'/>\r\n            </p>\r\n            <p className={classes.error}>{errors.name}</p>\r\n            <div className={classes.info_box}>{contactItems}</div>\r\n            <button className={classes.editProfile_btn}>Save</button>\r\n\r\n        </form>\r\n    )\r\n}","import React, {FC, ReactNode} from \"react\";\r\nimport classes from \"./Contacts.module.scss\"\r\nimport {ContactsType} from '@api/socialApi'\r\n\r\n\r\nconst capitalizeFirstLetter = (string: string): string => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n};\r\n\r\ntype PropsType = {\r\n  contacts?: ContactsType | null\r\n}\r\n\r\nexport const Contacts: FC<PropsType> = ({contacts}) => {\r\n\r\n  const newElements: Array<ReactNode> = Object.entries(contacts!).map((item) => {\r\n    return <p className={classes.contacts_item}\r\n        key={item[0]}>{capitalizeFirstLetter(item[0])}: {item[1] ?\r\n        <a className={classes.contacts_link}\r\n            href={item[1]}>{item[1]}</a> :\r\n        \"...\"}</p>\r\n  });\r\n\r\n  return (\r\n      <>\r\n        <h3 className={classes.contacts_header}>Contacts</h3>\r\n        <section className={classes.contacts}>\r\n\r\n          {newElements}\r\n        </section>\r\n      </>\r\n  )\r\n};","import React, {FC, useState} from \"react\";\r\nimport classes from \"./ProfileDescription.module.scss\"\r\nimport {ProfileForm} from '../ProfileForm/ProfileForm'\r\nimport {Contacts} from '../Contacts/Contacts'\r\nimport {ProfileType} from '@api/socialApi'\r\n\r\n\r\ntype PropsType = {\r\n  profile: ProfileType\r\n  isOwner: boolean\r\n}\r\n\r\nexport const ProfileDescription: FC<PropsType> = ({profile, isOwner}) => {\r\n\r\n  const [editMode, setEditMode] = useState<boolean>(false);\r\n\r\n  const onOpenEditMode = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    setEditMode(true);\r\n  };\r\n\r\n  return (\r\n      <div className={classes.profileDescription}>\r\n        {isOwner && editMode ?\r\n            <ProfileForm profile={profile}\r\n                closeEditMode={() => setEditMode(false)}/> :\r\n            <div className={classes.about_wrapper}>\r\n              <section className={classes.about}>\r\n                <h3 className={classes.about_header}>About</h3>\r\n                <p className={classes.about_item}>Looking for a\r\n                  Job: {profile.lookingForAJob ?\r\n                      \"Yes\" :\r\n                      \"No\"}</p>\r\n                <p className={classes.about_item}>Looking for a job\r\n                  description: {profile.lookingForAJobDescription ||\r\n                  \"...\"} </p>\r\n              </section>\r\n              <Contacts contacts={profile.contacts}/>\r\n              {isOwner ?\r\n                  <button className={classes.editProfile_btn}\r\n                      onClick={onOpenEditMode}>Edit Profile</button> :\r\n                  \"\"}\r\n            </div>}\r\n      </div>\r\n  )\r\n};","import React, {ChangeEvent, FC, useEffect} from 'react'\r\nimport classes from './ProfileInfo.module.scss'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport {RootState} from '@store/root-reducer'\r\nimport {followUser, isUserFollowed, savePhoto, unFollowUser} from '@profile/modules/profile/actions'\r\nimport {ProfileStatus} from '@profile/ui/atoms/ProfileStatus/ProfileStatus'\r\nimport {Link} from 'react-router-dom'\r\nimport {ProfileDescription} from '@profile/ui/molecules/ProfileDescription/ProfileDescription'\r\nimport {ProfileType} from '@api/socialApi'\r\n\r\n\r\n\r\n\r\ntype PropsType = {\r\n  userId : number\r\n  profile: ProfileType\r\n  myAva_img: string\r\n  authUserId: number\r\n  isAuth: boolean\r\n}\r\nexport const ProfileInfo:FC<PropsType> = ({userId, profile, authUserId, myAva_img, isAuth}) => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isOwner:boolean = userId === authUserId;\r\n\r\n  const {followed, isFollowing} = useSelector((state:RootState) => {\r\n    return {\r\n      followed: state.profilePage.followed,\r\n      isFollowing: state.profilePage.isFollowing\r\n    }\r\n}, shallowEqual);\r\n\r\n  const onSaveFile = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files!.length) dispatch(savePhoto(e.target.files![0]));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(isAuth) dispatch(isUserFollowed(userId));\r\n  }, [dispatch, userId, isAuth]);\r\n\r\n\r\n  return (\r\n    <div className={classes.profileInfo_wrapper}>\r\n\r\n      <div className={classes.userPhoto_block}>\r\n        <label>\r\n          <img alt=\"avatar\"\r\n            className={`${classes.userPhoto} ${isOwner &&\r\n            classes.ownerPhoto}`} src={myAva_img}/>\r\n          {isOwner &&\r\n          <input hidden onChange={onSaveFile} type=\"file\"/>}\r\n        </label>\r\n      </div>\r\n\r\n      <section className={classes.profileInfo}>\r\n        <div className={classes.userName_container}>\r\n          <p className={classes.userName}>{profile.fullName}</p>\r\n          <ProfileStatus isOwner={isOwner}/>\r\n\r\n          <div className={classes.buttons}>\r\n            {isOwner || <Link to={`/dialogs/${userId}`}>\r\n            <button> Send\r\n              message\r\n            </button>\r\n          </Link>}\r\n            {isOwner || (\r\n              followed ?\r\n                <button disabled={isFollowing}\r\n                  onClick={() => dispatch(unFollowUser())}>Unfollow</button> :\r\n                <button disabled={isFollowing}\r\n                  onClick={() => {\r\n                    dispatch(followUser())\r\n                  }}>Follow</button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <ProfileDescription profile={profile} isOwner={isOwner}/>\r\n      </section>\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n","import React, {useEffect} from 'react'\r\nimport {useAuthRedirect} from '@auth/hooks/useAuthRedirect'\r\nimport {useParams} from 'react-router'\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux'\r\nimport {RootState} from '@store/root-reducer'\r\nimport {getProfile, getStatus, profileActions} from '@profile/modules/profile/actions'\r\nimport avatarUndefined from '@ui/assets/images/avatar-undefined.jpg'\r\nimport {ProfileInfo} from '@profile/ui/organisms/ProfileInfo/ProfileInfo'\r\nimport {Preloader} from '@ui/atoms/preloader/Preloader'\r\n\r\n\r\ntype PathParamsType = {\r\n    userId?: string\r\n}\r\n\r\n\r\nconst Profile: React.FC = () => {\r\n\r\n    useAuthRedirect();\r\n\r\n    const selectedId = useParams<PathParamsType>().userId;\r\n    const dispatch = useDispatch();\r\n    const {profile, authUserId} = useSelector((state: RootState) => {\r\n        return {\r\n            profile: state.profilePage.profile,\r\n            authUserId: state.auth.user.userId\r\n        }\r\n    }, shallowEqual);\r\n\r\n    const isAuth = useSelector((state: RootState) => state.auth.isAuth);\r\n\r\n    let userId = selectedId || authUserId;\r\n\r\n    useEffect(() => {\r\n        if (isAuth) {\r\n            dispatch(getProfile(+userId!));\r\n            dispatch(getStatus(+userId!));\r\n        }\r\n        return (() => {\r\n            dispatch(profileActions.setUsersProfile(null))\r\n        })\r\n    }, [selectedId, dispatch, isAuth, userId]);\r\n\r\n    return (\r\n        <>\r\n            {!profile ?\r\n                <Preloader/> :\r\n                (\r\n                    <>\r\n                        <ProfileInfo authUserId={authUserId as number}\r\n                                     profile={profile}\r\n                                     userId={userId as number}\r\n                                     isAuth={isAuth}\r\n                                     myAva_img={profile.photos?.small || avatarUndefined}\r\n                        />\r\n                    </>\r\n                )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile","import {useHistory} from \"react-router\";\r\nimport {RootState} from '@store/root-reducer'\r\nimport {useSelector} from 'react-redux'\r\n\r\n\r\nexport const useAuthRedirect = () => {\r\n    const history = useHistory();\r\n    const isAuth = useSelector((state:RootState) => state.auth.isAuth);\r\n    if (!isAuth) {\r\n\r\n        history.push(\"/login\");\r\n    }\r\n};","import React, {FC} from \"react\";\r\nimport {CommonTemplate} from '@ui/templates/Common'\r\nimport Profile from '@profile/Profile'\r\n\r\n\r\nexport const ProfilePage: FC = () => {\r\n\r\n  return (\r\n    <CommonTemplate>\r\n      <Profile/>\r\n    </CommonTemplate>\r\n  )\r\n};"],"sourceRoot":""}